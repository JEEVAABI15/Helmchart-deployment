apiVersion: apps/v1
kind: Deployment
metadata:
  name: jenkins
  labels:
    app: jenkins
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jenkins
  template:
    metadata:
      labels:
        app: jenkins
    spec:
      securityContext:
        fsGroup: 1000
      containers:
        - name: jenkins
          image: "{{ .Values.controller.image.repository }}:{{ .Values.controller.image.tag }}"
          imagePullPolicy: {{ .Values.controller.image.pullPolicy }}
          securityContext:
            runAsUser: 1000
          ports:
            - containerPort: 8080
          resources:
            requests:
              cpu: {{ .Values.controller.resources.requests.cpu }}
              memory: {{ .Values.controller.resources.requests.memory }}
            limits:
              cpu: {{ .Values.controller.resources.limits.cpu }}
              memory: {{ .Values.controller.resources.limits.memory }}
          env:
            - name: JENKINS_ADMIN_ID
              valueFrom:
                secretKeyRef:
                  name: jenkins-admin-secret
                  key: JENKINS_ADMIN_ID
            - name: JENKINS_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: jenkins-admin-secret
                  key: JENKINS_ADMIN_PASSWORD
          volumeMounts:
            - name: jenkins-config
              mountPath: /var/jenkins_home/init.groovy.d
      volumes:
        - name: jenkins-config
          configMap:
            name: jenkins-init-config
  
